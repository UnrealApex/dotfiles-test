set autoindent
set autoread
set background=dark
set backspace=indent,eol,start
set backupdir=$XDG_DATA_HOME/vim/backup
set belloff=all
set clipboard=unnamedplus
set complete-=i
set completeopt=menu,menuone,noselect
set cursorline
set directory=$XDG_DATA_HOME/vim/swap
set expandtab
set fo+=jpor
set foldenable
set foldmethod=indent
set formatoptions=jcroqlnt
set grepformat="%f:%l:%c:%m"
set grepprg=rg\ --vimgrep
set guicursor=""
set hidden
set history=10000
set ignorecase
set incsearch
set laststatus=1
set list
set listchars=
set magic
set nocompatible
set nofoldenable
set novisualbell
set nowrap
set number
set omnifunc=syntaxcomplete#Complete
set path+=.,,
set pumheight=12
set relativenumber
set rtp+=$XDG_DATA_HOME/vim
set ruler
set scrolloff=8
set showcmd
set showmode
set signcolumn="1"
set smartcase
set splitright
" TODO: see if you really want to set this(use terminal colors)
" colorcolumn is non-existent with this enabled
" set t_Co=16
set tabpagemax=50
set tabstop=4
set tags="./tags;,tags"
set title
set ttimeout
set ttimeoutlen=5
set undodir=$XDG_DATA_HOME/vim/undo
set undofile
set undolevels=500
set updatetime=200
set viewoptions="unix,slash"
set viminfo+=n$XDG_CACHE_HOME/vim/viminfo
set wildoptions=pum,tagfile
set wildmenu
set wildmode=longest:full,full

" create paths for directories set
if !isdirectory(&backupdir)
  call mkdir(&backupdir, "p", 0700)
endif

if !isdirectory(&directory)
  call mkdir(&directory, "p", 0700)
endif

if !isdirectory(&undodir)
  call mkdir(&undodir, "p", 0700)
endif

colorscheme quiet
highlight clear SignColumn

" keybindings

" change map leader to space
let mapleader=" "

" line/selection movement binds
" alt + k to move a line or selection up,
" alt + j to move a line or selection down
" amazing vim hack taken from the wiki:
" https://vim.fandom.com/wiki/Moving_lines_up_or_down#:~:text=In%20normal%20mode%20or%20in,to%20move%20the%20block%20up.
nnoremap <silent> <A-j> :m .+1<CR>==
nnoremap <silent> <A-k> :m .-2<CR>==
inoremap <silent> <A-j> <Esc>:m .+1<CR>==gi
inoremap <silent> <A-k> <Esc>:m .-2<CR>==gi
vnoremap <silent> <A-j> :m '>+1<CR>gv=gv
vnoremap <silent> <A-k> :m '<-2<CR>gv=gv

" buffer stuff
" switch buffers easily
nnoremap <leader><leader> :set nomore <Bar> echo ":buffers" <Bar> :ls <Bar> :set more <CR>:b<Space>
nnoremap <Leader>n :enew<CR>
nnoremap <Leader>q :bd<CR>


nnoremap <leader>cd :cd %:p:h <Bar> echo getcwd()<CR>


nnoremap Y y$
nnoremap <C-L> <Cmd>nohlsearch<Bar>diffupdate<Bar>normal! <C-L><CR>
inoremap <C-U> <C-G>u<C-U>
inoremap <C-W> <C-G>u<C-W>
xnoremap * y/\V<C-R>"<CR>
xnoremap # y?\V<C-R>"<CR>
nnoremap & :&&<CR>



" vim plug
let data_dir = '~/.local/share/vim/'
if empty(glob(data_dir . '/autoload/plug.vim'))
  :echo "Installing Vim Plug"
  silent execute '!curl -fLo '.data_dir.'/autoload/plug.vim --create-dirs  https://raw.githubusercontent.com/junegunn/vim-plug/master/plug.vim'
  autocmd VimEnter * PlugInstall --sync | source $MYVIMRC
  :echo "Vim Plug installed"
endif

call plug#begin('~/.local/share/vim/plug')
" file explorer
Plug 'justinmk/vim-dirvish'
Plug 'tpope/vim-unimpaired'
" show git changes in gutter
Plug 'airblade/vim-gitgutter'
Plug 'romainl/vim-cool'
" Vim Surround
Plug 'tpope/vim-surround'
" Vim Commentary
Plug 'tpope/vim-commentary'
" Goyo
Plug 'junegunn/goyo.vim', {'on': 'Goyo'}
" colored parantheses
Plug 'junegunn/rainbow_parentheses.vim'
Plug 'tpope/vim-repeat'
call plug#end()

" enable RainbowParentheses
augroup rainbow_parens
  autocmd!
  autocmd VimEnter * RainbowParentheses
augroup end

" FZF configurations

" open FZF file search when ctrl + p is pressed
nnoremap <leader>ff :FZF<CR>

nnoremap <leader>z :Goyo<CR>

" create a new buffer
nnoremap <leader>n :enew<CR>

" switch tabs quickly
nnoremap <leader>1 1gt<CR>
nnoremap <leader>2 2gt<CR>
nnoremap <leader>3 3gt<CR>
nnoremap <leader>4 4gt<CR>
nnoremap <leader>5 5gt<CR>
nnoremap <leader>6 6gt<CR>
nnoremap <leader>7 7gt<CR>
nnoremap <leader>8 8gt<CR>
nnoremap <leader>9 9gt<CR>

" open a tab
nnoremap <leader>t :tabnew<CR>
" close a tab
nnoremap <leader>x :tabclose<CR>

" Resize splits with ctrl + arrows
nnoremap <C-Up> :resize -2<CR>
nnoremap <C-Down> :resize +2<CR>
nnoremap <C-Left> :vertical resize +2<CR>
nnoremap <C-Right> :vertical resize -2<CR>

" don't lose selection when shifting text
xnoremap < <gv
xnoremap > >gv
