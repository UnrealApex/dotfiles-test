set -g @plugin 'tmux-plugins/tpm'
set -g @plugin 'tmux-plugins/tmux-resurrect'
set -g @plugin 'tmux-plugins/tmux-continuum'

set -g @continuum-restore 'on'

# set -g default-command 
# set -g status-right "#{?window_bigger,[#{window_offset_x}#,#{window_offset_y}] ,}\"#{=21:pane_title}\" %H:%M %d-%b-%y"
set -g activity-action other
set -g assume-paste-time 1
set -g base-index 1
set -g bell-action none
set -g default-shell /bin/zsh
set -g default-size 80x24
set -g default-terminal "tmux-256color"
set -g destroy-unattached off
set -g detach-on-destroy on
set -g display-panes-active-colour red
set -g display-panes-colour blue
set -g display-panes-time 1000
set -g display-time 4000
set -g escape-time 10
set -g history-limit 50000
set -g key-table root
set -g lock-after-time 0
set -g lock-command "lock -np"
set -g message-command-style fg=yellow,bg=black
set -g message-style fg=black,bg=yellow
set -g mouse on
set -g pane-base-index 1
set -g prefix C-b
set -g prefix2 None
set -g renumber-windows off
set -g repeat-time 500
set -g set-titles off
set -g set-titles-string "#S:#I:#W - \"#T\" #{session_alerts}"
set -g silence-action other
set -g status on
set -g status-bg green
set -g status-fg black
set -g status-format[0] "#[align=left range=left #{status-left-style}]#{T;=/#{status-left-length}:status-left}#[norange default]#[list=on align=#{status-justify}]#[list=left-marker]<#[list=right-marker]>#[list=on]#{W:#[range=window|#{window_index} #{window-status-style}#{?#{&&:#{window_last_flag},#{!=:#{window-status-last-style},default}}, #{window-status-last-style},}#{?#{&&:#{window_bell_flag},#{!=:#{window-status-bell-style},default}}, #{window-status-bell-style},#{?#{&&:#{||:#{window_activity_flag},#{window_silence_flag}},#{!=:#{window-status-activity-style},default}}, #{window-status-activity-style},}}]#{T:window-status-format}#[norange default]#{?window_end_flag,,#{window-status-separator}},#[range=window|#{window_index} list=focus #{?#{!=:#{window-status-current-style},default},#{window-status-current-style},#{window-status-style}}#{?#{&&:#{window_last_flag},#{!=:#{window-status-last-style},default}}, #{window-status-last-style},}#{?#{&&:#{window_bell_flag},#{!=:#{window-status-bell-style},default}}, #{window-status-bell-style},#{?#{&&:#{||:#{window_activity_flag},#{window_silence_flag}},#{!=:#{window-status-activity-style},default}}, #{window-status-activity-style},}}]#{T:window-status-current-format}#[norange list=on default]#{?window_end_flag,,#{window-status-separator}}}#[nolist align=right range=right #{status-right-style}]#{T;=/#{status-right-length}:status-right}#[norange default]"
set -g status-format[1] "#[align=centre]#{P:#{?pane_active,#[reverse],}#{pane_index}[#{pane_width}x#{pane_height}]#[default] }"
set -g status-interval 5
set -g status-justify left
set -g status-keys vi
set -g status-left "[#S] "
set -g status-left-length 10
set -g status-left-style default
set -g status-position bottom
set -g status-right "#{?window_bigger,[#{window_offset_x}#,#{window_offset_y}] ,}"
set -g status-right-length 40
set -g status-right-style default
set -g status-style fg=black,bg=green
set -g update-environment[0] DISPLAY
set -g update-environment[1] KRB5CCNAME
set -g update-environment[2] SSH_ASKPASS
set -g update-environment[3] SSH_AUTH_SOCK
set -g update-environment[4] SSH_AGENT_PID
set -g update-environment[5] SSH_CONNECTION
set -g update-environment[6] WINDOWID
set -g update-environment[7] XAUTHORITY
set -g visual-activity off
set -g visual-bell off
set -g visual-silence off
set -g word-separators " "
set -ga terminal-overrides ",*256col*:Tc"
set-option -g renumber-windows on
set-option -g status-position top
set-window-option -g pane-base-index 1

bind R source-file '/home/aaron/.config/tmux/tmux.conf'\; display-message "Config reloaded!"

bind -T copy-mode-vi Enter send-keys -X copy-pipe-and-cancel "xclip -in -selection clipboard"

bind -n M-h select-pane -L
bind -n M-j select-pane -D
bind -n M-k select-pane -U
bind -n M-l select-pane -R

bind -n "M-H" run-shell 'old=`tmux display -p "#{pane_index}"`; tmux select-pane -L; tmux swap-pane -t $old'
bind -n "M-J" run-shell 'old=`tmux display -p "#{pane_index}"`; tmux select-pane -D; tmux swap-pane -t $old'
bind -n "M-K" run-shell 'old=`tmux display -p "#{pane_index}"`; tmux select-pane -U; tmux swap-pane -t $old'
bind -n "M-L" run-shell 'old=`tmux display -p "#{pane_index}"`; tmux select-pane -R; tmux swap-pane -t $old'
bind -n "M-f" resize-pane -Z

bind -n M-Enter run "[[ $(($(tmux display -p '8*#{pane_width}-20*#{pane_height}'))) -lt 0 ]] && tmux splitw -v -c '#{pane_current_path}' || tmux splitw -h -c '#{pane_current_path}'"

bind -n M-q kill-pane

bind -n M-1 if-shell 'tmux select-window -t :1' '' 'new-window -t :1'
bind -n M-2 if-shell 'tmux select-window -t :2' '' 'new-window -t :2'
bind -n M-3 if-shell 'tmux select-window -t :3' '' 'new-window -t :3'
bind -n M-4 if-shell 'tmux select-window -t :4' '' 'new-window -t :4'
bind -n M-5 if-shell 'tmux select-window -t :5' '' 'new-window -t :5'
bind -n M-6 if-shell 'tmux select-window -t :6' '' 'new-window -t :6'
bind -n M-7 if-shell 'tmux select-window -t :7' '' 'new-window -t :7'
bind -n M-8 if-shell 'tmux select-window -t :8' '' 'new-window -t :8'
bind -n M-9 if-shell 'tmux select-window -t :9' '' 'new-window -t :9'
bind -n M-0 if-shell 'tmux select-window -t :10' '' 'new-window -t 10'

# TODO: binary split partiioning
bind -n M-! join-pane -t :1
bind -n M-@ join-pane -t :2
bind -n M-# join-pane -t :3
bind -n M-$ join-pane -t :4
bind -n M-% join-pane -t :5
bind -n M-^ join-pane -t :6
bind -n M-& join-pane -t :7
bind -n M-* join-pane -t :8
bind -n M-( join-pane -t :9
bind -n M-) join-pane -t :10


# bind -n M-! run "[[ $(($(tmux display -p '8*#{pane_width}-20*#{pane_height}'))) -lt 0 ]] && join-pane -v -t :1 || join-pane -h -t :1"
# bind -n M-@ run "[[ $(($(tmux display -p '8*#{pane_width}-20*#{pane_height}'))) -lt 0 ]] && join-pane -v -t :2 || join-pane -h -t :2"
# bind -n M-# run "[[ $(($(tmux display -p '8*#{pane_width}-20*#{pane_height}'))) -lt 0 ]] && join-pane -v -t :3 || join-pane -h -t :3" 
# bind -n M-$ run "[[ $(($(tmux display -p '8*#{pane_width}-20*#{pane_height}'))) -lt 0 ]] && join-pane -v -t :4 || join-pane -h -t :4" 
# bind -n M-% run "[[ $(($(tmux display -p '8*#{pane_width}-20*#{pane_height}'))) -lt 0 ]] && join-pane -v -t :5 || join-pane -h -t :5" 
# bind -n M-^ run "[[ $(($(tmux display -p '8*#{pane_width}-20*#{pane_height}'))) -lt 0 ]] && join-pane -v -t :6 || join-pane -h -t :6" 
# bind -n M-& run "[[ $(($(tmux display -p '8*#{pane_width}-20*#{pane_height}'))) -lt 0 ]] && join-pane -v -t :7 || join-pane -h -t :7" 
# bind -n M-* run "[[ $(($(tmux display -p '8*#{pane_width}-20*#{pane_height}'))) -lt 0 ]] && join-pane -v -t :8 || join-pane -h -t :8" 
# bind -n M-(  run "[[ $(($(tmux display -p '8*#{pane_width}-20*#{pane_height}'))) -lt 0 ]] && join-pane -v -t :9 || join-pane -h -t :9"
# bind -n M-)  run "[[ $(($(tmux display -p '8*#{pane_width}-20*#{pane_height}'))) -lt 0 ]] && join-pane -v -t :10 || join-pane -h -t :10"


run '~/.tmux/plugins/tpm/tpm'
