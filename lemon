#!/bin/bash

bg_color="#000000"
fg_color="#e3e4e7"
disabled_color="#777777"
main_color="#bf4e6d"

workspace() {
  # workspaces with windows open
  OCCUPIED_WORKSPACES=($(wmctrl -l | awk '{print $2}' | sort -u))
  # $OCCUPIED_WORKSPACES is zero based so make it one based
  for ((i = 0; i < ${#OCCUPIED_WORKSPACES[@]}; i++)); do ((OCCUPIED_WORKSPACES[i]++)); done
  # current workspace(also zero based)
  CURRENT_WORKSPACES=$(($(xprop -root _NET_CURRENT_DESKTOP | awk '{print $3}') + 1))
  # all wm defined workspaces(one based in case)
  WORKSPACES=($(xprop -root _NET_DESKTOP_NAMES | awk '{$1=$2=""; print $0}' | sed -e 's/,//g' -e 's/\"//g' -e 's/^[[:space:]]*//'))
  # color formatted workspaces
  LEMONBAR_WORKSPACES=()

  for i in "${WORKSPACES[@]}"; do
    if [ "$i" -eq "$CURRENT_WORKSPACES" ]; then
      LEMONBAR_WORKSPACES+=("%{F$main_color}")
    elif [[ ${OCCUPIED_WORKSPACES[*]} =~ $i ]]; then
      LEMONBAR_WORKSPACES+=("%{F$fg_color}")
    else
      LEMONBAR_WORKSPACES+=("%{F$disabled_color}")
    fi

    LEMONBAR_WORKSPACES+=("$i ")
    LEMONBAR_WORKSPACES+=("%{F-}")
  done

  printf '%s\n' "${LEMONBAR_WORKSPACES[@]}"
}

clock() {
  TIME=$(date +" %d/%m %H:%M:%S")
  printf "$TIME"
}

# FIXME: clean up formatting of cpu and ram data
cpu() {
  CPU=$(top -bn1 | grep "Cpu(s)" |
    sed "s/.*, *\([0-9.]*\)%* id.*/\1/" |
    awk '{print 100 - $1}' | awk '{printf "%.0f\n", $1}')
  printf "$CPU%%"
}

ram() {
  RAM=$(free | grep Mem | awk '{print $3/$2 * 100.0}' | awk '{printf "%.0f\n", $1}')
  printf "$RAM%%"
}

while true; do
  # TODO: make sure formatting is correct
  BAR_INPUT="%{l}$(workspace) %{c}$(clock) %{r}%{F$main_color}ram%{F-} $(ram) %{F$main_color}cpu%{F-} $(cpu) %{F$main_color}"
  echo $BAR_INPUT
  sleep 1
done
